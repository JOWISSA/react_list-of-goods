{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlphaber","ALPHABET","sortByLength","LENGTH","reset","this","visibleGoods","goods","sort","goods1","goods2","localeCompare","length","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,UAAS,iBAAO,CACnBH,SAAUL,EAASU,cAdzB,EAkBEC,aAAe,WACb,EAAKH,UAAS,iBAAO,CACnBH,SAAUL,EAASY,YApBzB,EAwBEC,MAAQ,WACN,EAAKL,UAAS,iBAAO,CACnBJ,YAAY,EACZC,SAAUL,EAASM,UA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAvEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GA0BzB,OAxBIhB,GACFe,EAAaE,MAAK,SAACC,EAAQC,GACzB,OAAQd,GACN,KAAML,EAASU,SACb,OAAOQ,EAAOE,cAAcD,GAG9B,KAAMnB,EAASY,OACb,OAAOM,EAAOG,OAASF,EAAOE,OAGhC,QACE,OAAO,MAKXjB,GACFW,EAAaR,UAIfe,QAAQC,IAAIlB,EAAUD,GAEfW,EAyCgBS,CAAkBvB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,SAAU,UAAW,CAC9B,WAAYtB,IAAaL,EAASU,WAGtCkB,QAASd,KAAKL,eAPhB,iCAYA,wBACEiB,KAAK,SACLD,UACEE,IAAW,SAAU,aAAc,CACjC,WAAYtB,IAAaL,EAASY,SAGtCgB,QAASd,KAAKH,aAPhB,4BAYA,wBACEe,KAAK,SACLD,UACEE,IAAW,SAAU,aAAc,CACjC,YAAavB,IAGjBwB,QAASd,KAAKP,QAPhB,sBAYEH,GAAcC,IAAaL,EAASM,OACpC,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,MAHhB,sBAWJ,6BAEIE,EAAac,KAAI,SAACC,GAAD,OACf,oBACE,UAAQ,OADV,SAIGA,GAFIA,eA3FrB,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be989bd0.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (SortType) {\n    visibleGoods.sort((goods1, goods2) => {\n      switch (sortType) {\n        case (SortType.ALPHABET):\n          return goods1.localeCompare(goods2);\n          break;\n\n        case (SortType.LENGTH):\n          return goods1.length - goods2.length;\n          break;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphaber = () => {\n    this.setState(() => ({\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(() => ({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames('button', 'is-info', {\n                'is-light': sortType !== SortType.ALPHABET,\n              })\n            }\n            onClick={this.sortByAlphaber}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button', 'is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              })\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button', 'is-warning', {\n                'is-light': !isReversed,\n              })\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          {\n            visibleGoods.map((good) => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}